@model Tuple<List<GradeBook.Models.Student>, List<GradeBook.Models.User>>
@{
    var role = Context.Session.GetString("Role");
    if (role != "Manager")
    {
        <div style="color:red">Access denied. Only managers can access this page.</div>
        return;
    }
    
    var students = Model.Item1;
    var users = Model.Item2;
    var guests = users.Where(u => u.Role == "Guest").ToList();
    var nonGuests = users.Where(u => u.Role != "Guest").ToList();
}
<head>
    <meta charset="utf-8" />
    <title>Manage Accounts</title>
    <link rel="stylesheet" href="@Url.Content("~/css/style.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/jumper.css")" />
</head>
<body>
    <div id="jumper">ඞ</div>
    <main>
        <h2>Manage User Accounts</h2>
        
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="success-message">@TempData["SuccessMessage"]</div>
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="error-message">@TempData["ErrorMessage"]</div>
        }
        
        <h3>Pending Guest Accounts</h3>
        @if (guests.Any())
        {
            <ul>
                @foreach (var guest in guests)
                {
                    <li>
                        @guest.Email (Guest)
                        <form method="post" action="@Url.Action("AssignRole", "Managers")">
                            <input type="hidden" name="userId" value="@guest.Id" />
                            <select name="role">
                                <option value="Student">Student</option>
                                <option value="Teacher">Teacher</option>
                                <option value="Manager">Manager</option>
                            </select>
                            <button type="submit">Assign Role</button>
                        </form>
                        <a href="@Url.Action("RemoveAccount", "Managers", new { userId = guest.Id })" 
                           onclick="return confirm('Are you sure you want to delete this guest account?');"
                           style="margin-left: 10px; color: #ff4444;">Delete</a>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No pending guest accounts.</p>
        }
        
        <h3>Active Users Management</h3>
        <ul>
            @foreach (var user in nonGuests)
            {
                <li>
                    @user.Email (@user.Role)
                    @if (user.Role == "Student")
                    {
                        <form method="post" action="@Url.Action("AssignStudentId", "Managers")">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <select name="studentId">
                                <option value="">-- select student --</option>
                                @foreach (var student in students)
                                {
                                    <option value="@student.Id" @(user.StudentId == student.Id ? "selected" : "")>
                                        @student.FirstName @student.LastName (@student.Id)
                                    </option>
                                }
                            </select>
                            <button type="submit">Assign</button>
                        </form>
                    }
                    
                    @if (user.Role != "Manager")
                    {
                        <a href="@Url.Action("RemoveAccount", "Managers", new { userId = user.Id })" 
                           onclick="return confirm('Are you sure you want to delete this account?');"
                           style="margin-left: 10px; color: #ff4444;">Delete</a>
                    }
                    
                    @if (user.Role == "Student" && user.StudentId != null)
                    {
                        <br/>
                        var assignedStudent = students.FirstOrDefault(s => s.Id == user.StudentId);
                        if (assignedStudent != null)
                        {
                            <span>Currently assigned: @assignedStudent.FirstName @assignedStudent.LastName</span>
                        }
                    }
                </li>
            }
        </ul>
    </main>
    <script src="@Url.Content("~/js/jumper.js")"></script>
</body>